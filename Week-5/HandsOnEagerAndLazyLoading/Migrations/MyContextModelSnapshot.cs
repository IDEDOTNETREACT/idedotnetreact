// <auto-generated />
using System;
using HandsOnEagerAndLazyLoading.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HandsOnEagerAndLazyLoading.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("HandsOnEagerAndLazyLoading.Entities.Category", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = "C001",
                            CategoryName = "Electronics"
                        },
                        new
                        {
                            CategoryId = "C002",
                            CategoryName = "Books"
                        });
                });

            modelBuilder.Entity("HandsOnEagerAndLazyLoading.Entities.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("OrderDate")
                        .HasMaxLength(5)
                        .HasColumnType("Date");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = new Guid("76575f09-43a0-4de7-b2fc-4d1091e48807"),
                            OrderDate = new DateTime(2025, 6, 28, 13, 26, 24, 347, DateTimeKind.Local).AddTicks(6358),
                            ProductId = 1
                        },
                        new
                        {
                            OrderId = new Guid("70ae1a29-e142-42a6-864e-98a83593542d"),
                            OrderDate = new DateTime(2025, 6, 28, 13, 26, 24, 347, DateTimeKind.Local).AddTicks(6374),
                            ProductId = 2
                        },
                        new
                        {
                            OrderId = new Guid("e3a9f50a-8ed3-4ef4-afed-2fcd173ff730"),
                            OrderDate = new DateTime(2025, 6, 28, 13, 26, 24, 347, DateTimeKind.Local).AddTicks(6376),
                            ProductId = 3
                        });
                });

            modelBuilder.Entity("HandsOnEagerAndLazyLoading.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = "C001",
                            Name = "Laptop",
                            Price = 50000.0
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = "C001",
                            Name = "Smartphone",
                            Price = 20000.0
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = "C002",
                            Name = "Fiction Book",
                            Price = 300.0
                        });
                });

            modelBuilder.Entity("HandsOnEagerAndLazyLoading.Entities.Order", b =>
                {
                    b.HasOne("HandsOnEagerAndLazyLoading.Entities.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("HandsOnEagerAndLazyLoading.Entities.Product", b =>
                {
                    b.HasOne("HandsOnEagerAndLazyLoading.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("HandsOnEagerAndLazyLoading.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("HandsOnEagerAndLazyLoading.Entities.Product", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
