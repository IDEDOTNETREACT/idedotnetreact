// <auto-generated />
using HandsOnAPIUsingJWT.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HandsOnAPIUsingJWT.Migrations
{
    [DbContext(typeof(OnlineShopDBContext))]
    partial class OnlineShopDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HandsOnAPIUsingJWT.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Price = 1000,
                            ProductName = "Laptop"
                        },
                        new
                        {
                            ProductId = 2,
                            Price = 500,
                            ProductName = "Smartphone"
                        },
                        new
                        {
                            ProductId = 3,
                            Price = 300,
                            ProductName = "Tablet"
                        },
                        new
                        {
                            ProductId = 4,
                            Price = 200,
                            ProductName = "Smartwatch"
                        });
                });

            modelBuilder.Entity("HandsOnAPIUsingJWT.Entities.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = "U0001",
                            Email = "admin@gmail.com",
                            Mobile = "9098909890",
                            Password = "admin123",
                            Role = "Admin",
                            UserName = "admin"
                        },
                        new
                        {
                            UserId = "U0002",
                            Email = "user@gmail.com",
                            Mobile = "8098909890",
                            Password = "user123",
                            Role = "User",
                            UserName = "user"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
